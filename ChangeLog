Version 0.7.2
=============
 - Fixed theoretical crash if buffer is NULL
 - Simplified Poll handle API
 - Added support for creating symlinks with junction points on Windows
 - Fixed some failing tests on Windows
 - Raised libuv revision to 5c30443
 - Updated documentation

Version 0.7.1
=============
 - Fixed crash when Loop.walk returned a Python object being deallocated

Version 0.7.0
=============
 - Added weak referencing support to handles
 - Added Poll handle
 - Added more tests: weakrefs, gc, ...
 - Added instance dictionary to Loop and all handles
 - Added filename property to FSEvent handle
 - Added TCP echo server example using Poll handles, adapted from pyev
 - Added active_handles property to Loop
 - Added Loop.walk function to iterate over the loop handles
 - Added support for spawning detached child processes
 - Adapted UDP.send to accept objects conforming to the buffer interface and
   also added UDP.sendlines
 - Improved efficiency by avoiding copying strings on write/send
 - Refactored Process stdio support
 - Refactored ThreadPool API
 - Refactored exception hierarchy
 - Refactored code according to refcount refactor in libuv
 - Refactored Async handle API
 - Refactored API to set parallel thread number in the thread pool
 - Fixed compilation warnings on Python 3
 - Fixed TTY example on Windows
 - Fixed some fs operations relaying on fileno() on Windows
 - Raised libuv revision to 38a6f9f
 - Updated documentation

Version 0.6.1
=============
 - Added ability to set uid and gid on Process.spawn
 - Added status parameter to ThreadPool after_work callback
 - Added ability to control the number of threads in the ThreadPool (unix
   only)
 - Added 'readable' and 'writable' read-only properties to stream objects
 - Return named tuples for Loop.counters, fs.stat and DNS functions
 - Refactored DNS query functions, it's a single function now
 - Raised libuv revision to 6367da2
 - Updated documentation

Version 0.6.0
=============
 - Added get/set process_title functions
 - Added NAPTR query support to DNSResolver
 - Added cancel method to DNSResolver
 - Added ares_strerror function to errno module. It returns a string
   representation of a c-ares error code
 - Refactored write function to accept any object conforming to the
   Python buffer interface
 - Refactored ThreadPool
 - Refactored DNS functions to return values like the Pyhton standard
   library
 - Reordered arguments in several functions of the DNS module
 - Fixed several reference leaks
 - Fixed crash when doing CNAME queries
 - Fixed compilation on Windows 7
 - Map several new error codes (ENOTEMPTY, EPERM, ELOOP, EXDEV, ENOSPC)
 - Raised libuv revision to 31ff986
 - Updated documentation

Version 0.5.0
=============
 - Added support for asynchronous DNS queries of tyes: A, AAAA, CNAME,
   TXT, NS, MX, SRV
 - Added synchronous API for filesystem (fs module) operations
 - Added set_multicast_ttl, set_broadcast, set_multicast_loop and set_ttl
   functions to UDP handle
 - Removed data attribute from fs module functions
 - Raised libuv revision to 3de0411


Version 0.4.0
=============
 - Added support for Python 3.X
 - Added support for Microsoft Windows (using MinGW)
 - Migrated the test suite to tox + nose + unittest2
 - Raised libuv revision to 454e021


Version 0.3.0
=============
 - Added new functions to fs module: open, close, read, write, fsync,
   fdatasync, ftruncate, readdir, sendfile, utime, futime
 - Added FSEvent handle, for monitoring filesystem events
 - Added IPC support (start_read2 and write2 methods on Pipe handles)
 - Added pid property to Process
 - Refactored accept function on TCP and Pipe handles
 - Removed get/set_process_title functions
 - Added more test cases to the test suite
 - Added ability to skip tests based on platform
 - Removed unneded arguments from fs callbacks and properly set errorno attribute
   to None if no error occurred
 - Added path attribute to fs callbacks
 - Fixed write operations in NULL bytes are present
 - Enhanced error reporting by passing an 'error' argument to several callbacks
 - Raised libuv revision to 51ea46d


Version 0.2.0
=============
 - Made the default loop a singleton
 - Added TTY handle
 - Moved all exception definitions to a standalone file
 - Added set_membership function to UDP handle
 - Added ability to write a list of strings to IOStream objects
 - Added ability to send lists of strings on UDP handles
 - Added open function to Pipe handle
 - Added Process handle
 - Added 'data' attribute to all handles for storing arbitrary objects
 - Refactored ThreadPool
 - Implemented pending_instances function on Pipe handle
 - Implemented nodelay, keepalive and simultaneous_accepts functions on TCP handle
 - Added 'counters' attribute to Loop
 - Added 'poll' function to Loop
 - Added new functions to fs module: unlink, mkdir, rmdir, rename, chmod,
   fchmod, link, symlink, readlink, chown, fchown, fstat
 - Added new functions to util module: uptime, get_process_title,
   set_process_title, resident_set_size, interface_addresses, cpu_info


Version 0.1.0
=============
 - Initial release

